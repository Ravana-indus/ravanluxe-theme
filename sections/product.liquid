{% doc %}
  Renders a luxury product page with gallery, variant selection, and purchase options.

  This section provides a premium shopping experience with:
  - Desktop gallery with 2x2 grid layout
  - Mobile swipeable carousel with dot navigation
  - Interactive variant selection with real-time price updates
  - Quantity selector with +/- buttons
  - Add to cart functionality
  - Product information accordion

  @param {product} product - The product object from Shopify
{% enddoc %}

<div class="product-page-luxury">
  <div class="product-page-luxury__gallery">
    {% if product.images.size > 0 %}
      {%- comment -%} Desktop: 2x2 Grid {%- endcomment -%}
      <div class="product-gallery-desktop">
        {% for image in product.images limit: 4 %}
          <div class="product-gallery__image">
            {{ image | image_url: width: 1000 | image_tag: loading: 'lazy', alt: product.title }}
          </div>
        {% endfor %}
      </div>

      {%- comment -%} Mobile: Swipeable Carousel {%- endcomment -%}
      <div class="product-gallery-mobile">
        <div class="mobile-carousel" data-mobile-carousel>
          {% for image in product.images %}
            <div class="mobile-carousel__slide">
              {{ image | image_url: width: 800 | image_tag: loading: 'lazy', alt: product.title }}
            </div>
          {% endfor %}
        </div>
        <div class="mobile-carousel__dots" data-carousel-dots>
          {% for image in product.images %}
            <button
              class="carousel-dot {% if forloop.first %}active{% endif %}"
              data-dot-index="{{ forloop.index0 }}"
              aria-label="Go to slide {{ forloop.index }}"
            ></button>
          {% endfor %}
        </div>
      </div>
    {% endif %}
  </div>

  <div class="product-page-luxury__sidebar">
    <div class="product-page-luxury__sidebar-content">
      <div class="product-header">
        <h1 class="product-header__title">{{ product.title }}</h1>
        <div class="product-header__price" data-product-price>
          {{ product.selected_or_first_available_variant.price | money }}
        </div>
      </div>

      {% form 'product', product, id: 'product-form-luxury', data-product-form: '' %}
        <input
          type="hidden"
          name="id"
          value="{{ product.selected_or_first_available_variant.id }}"
          data-variant-id
        >

        {% unless product.has_only_default_variant %}
          <div class="product-options">
            {% for option in product.options_with_values %}
              <div class="product-option">
                <label class="product-option__label">{{ option.name }}</label>
                <div class="product-option__buttons">
                  {% for value in option.values %}
                    <button
                      type="button"
                      class="option-button {% if option.selected_value == value %}active{% endif %}"
                      data-option-button
                      data-option-position="{{ option.position }}"
                      data-option-value="{{ value | escape }}"
                    >
                      {{ value }}
                    </button>
                  {% endfor %}
                </div>
              </div>
            {% endfor %}
          </div>
        {% endunless %}

        <div class="product-quantity">
          <label class="product-quantity__label">Quantity</label>
          <div class="quantity-selector">
            <button type="button" class="quantity-button" data-quantity-decrease aria-label="Decrease quantity">âˆ’</button>
            <input
              type="number"
              name="quantity"
              value="1"
              min="1"
              class="quantity-input"
              data-quantity-input
            >
            <button type="button" class="quantity-button" data-quantity-increase aria-label="Increase quantity">+</button>
          </div>
        </div>

        <button
          type="submit"
          class="product-submit"
          data-add-to-cart
          {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %}
        >
          <span data-button-text>
            {% if product.selected_or_first_available_variant.available %}
              Add to Basket
            {% else %}
              Sold Out
            {% endif %}
          </span>
        </button>
      {% endform %}

      {% if product.description != blank %}
        <div class="product-accordion">
          <details class="accordion-item" open>
            <summary class="accordion-summary">Description</summary>
            <div class="accordion-content">{{ product.description }}</div>
          </details>

          <details class="accordion-item">
            <summary class="accordion-summary">Details & Care</summary>
            <div class="accordion-content">
              <p>Crafted with meticulous attention to detail, celebrating Tamil heritage through contemporary luxury design.</p>
              <ul>
                <li>Premium materials</li>
                <li>Handcrafted quality</li>
                <li>Made in India</li>
                <li>Professional dry clean recommended</li>
              </ul>
            </div>
          </details>

          <details class="accordion-item">
            <summary class="accordion-summary">Shipping & Returns</summary>
            <div class="accordion-content">
              <p>Free worldwide shipping on orders over $200. Returns accepted within 14 days.</p>
            </div>
          </details>
        </div>
      {% endif %}
    </div>
  </div>
</div>

<script type="application/json" data-product-json>
  {{ product | json }}
</script>

{% stylesheet %}
  .product-page-luxury {
    display: grid;
    grid-template-columns: 1fr 400px;
    gap: 2rem;
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 2rem var(--page-margin);
  }

  /* Gallery */
  .product-page-luxury__gallery {
    position: relative;
  }

  .product-gallery-desktop {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.5rem;
  }

  .product-gallery__image {
    aspect-ratio: 3 / 4;
    background-color: var(--color-secondary-background);
    overflow: hidden;
  }

  .product-gallery__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .product-gallery-mobile {
    display: none;
  }

  .mobile-carousel {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
  }

  .mobile-carousel::-webkit-scrollbar {
    display: none;
  }

  .mobile-carousel__slide {
    flex: 0 0 100%;
    scroll-snap-align: start;
  }

  .mobile-carousel__slide img {
    width: 100%;
    height: auto;
    display: block;
  }

  .mobile-carousel__dots {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    padding: 1rem 0;
  }

  .carousel-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    border: 1px solid var(--color-foreground);
    background: transparent;
    cursor: pointer;
    padding: 0;
    transition: background 0.3s ease;
  }

  .carousel-dot.active {
    background-color: var(--color-foreground);
  }

  /* Sidebar */
  .product-page-luxury__sidebar {
    position: sticky;
    top: 100px;
    height: fit-content;
    border-left: 1px solid rgba(0, 0, 0, 0.1);
    padding-left: 2rem;
  }

  .product-page-luxury__sidebar-content {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  /* Header */
  .product-header {
    padding-bottom: 2rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }

  .product-header__title {
    font-size: 1.5rem;
    font-weight: 400;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    margin-bottom: 1rem;
    color: var(--color-foreground);
    text-align: center;
  }

  .product-header__price {
    font-size: 1.125rem;
    font-weight: 500;
    letter-spacing: 0.02em;
    color: var(--color-foreground);
    text-align: center;
  }

  /* Options */
  .product-options {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .product-option__label {
    display: block;
    font-size: 0.8125rem;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    margin-bottom: 0.75rem;
    color: var(--color-foreground);
  }

  .product-option__buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
  }

  .option-button {
    padding: 0.75rem 1.5rem;
    border: 1px solid var(--color-foreground);
    background: var(--color-background);
    color: var(--color-foreground);
    font-size: 0.875rem;
    letter-spacing: 0.05em;
    cursor: pointer;
    transition: all 0.3s ease;
    min-width: 60px;
    font-family: inherit;
  }

  .option-button:hover {
    opacity: 0.7;
  }

  .option-button.active {
    background-color: var(--color-foreground);
    color: var(--color-background);
  }

  .option-button:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  /* Quantity */
  .product-quantity__label {
    display: block;
    font-size: 0.8125rem;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    margin-bottom: 0.75rem;
    color: var(--color-foreground);
  }

  .product-quantity {
    margin-bottom: 2rem;
    margin-top: 2rem;
  }

  .quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid var(--color-foreground);
    width: fit-content;
    margin: 0 auto;
  }

  .quantity-button {
    width: 40px;
    height: 40px;
    border: none;
    background: var(--color-background);
    color: var(--color-foreground);
    cursor: pointer;
    font-size: 1.125rem;
    transition: background 0.3s ease;
    font-family: inherit;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quantity-button:hover {
    background-color: var(--color-secondary-background);
  }

  .quantity-input {
    width: 60px;
    height: 40px;
    border: none;
    border-left: 1px solid var(--color-foreground);
    border-right: 1px solid var(--color-foreground);
    text-align: center;
    font-size: 0.875rem;
    font-family: inherit;
    color: var(--color-foreground);
    /* Remove default up/down arrows */
    -moz-appearance: textfield;
    appearance: textfield;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* Remove default up/down arrows for WebKit browsers */
  .quantity-input::-webkit-outer-spin-button,
  .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .quantity-input:focus {
    outline: none;
  }

  /* Submit Button */
  .product-submit {
    width: 100%;
    padding: 1.125rem;
    background-color: var(--color-foreground);
    color: var(--color-background);
    border: 1px solid var(--color-foreground);
    font-size: 0.875rem;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: inherit;
    /* Ensure proper alignment */
    display: block;
    text-align: center;
    box-sizing: border-box;
  }

  .product-submit:hover:not(:disabled) {
    background-color: var(--color-background);
    color: var(--color-foreground);
  }

  .product-submit:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Accordion */
  .product-accordion {
    display: flex;
    flex-direction: column;
  }

  .accordion-item {
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }

  .accordion-summary {
    padding: 1.5rem 0;
    font-size: 0.875rem;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    cursor: pointer;
    list-style: none;
    color: var(--color-foreground);
    text-align: left;
  }

  .accordion-summary::-webkit-details-marker {
    display: none;
  }

  .accordion-content {
    padding-bottom: 1.5rem;
    font-size: 0.875rem;
    line-height: 1.8;
    color: var(--color-foreground);
    text-align: left;
  }

  .accordion-content ul {
    list-style: disc;
    padding-left: 1.5rem;
    margin-top: 0.5rem;
  }

  .accordion-content li {
    margin-bottom: 0.25rem;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .product-page-luxury {
      grid-template-columns: 1fr;
    }

    .product-gallery-desktop {
      display: none;
    }

    .product-gallery-mobile {
      display: block;
    }

    .product-page-luxury__sidebar {
      position: relative;
      top: 0;
      border-left: none;
      border-top: 1px solid rgba(0, 0, 0, 0.1);
      padding-left: 0;
      padding-top: 2rem;
    }
  }

  @media (max-width: 768px) {
    .product-page-luxury {
      padding: 1.5rem 1rem;
      width: 100%;
      margin: 0;
    }

    .product-page-luxury h1,
    .product-page-luxury h2,
    .product-page-luxury h3,
    .product-page-luxury p,
    .product-page-luxury .product-header__title,
    .product-page-luxury .product-header__description {
      max-width: 98%;
      margin-left: auto;
      margin-right: auto;
      text-align: center;
    }

    .product-header__title {
      font-size: 1.25rem;
    }

    .option-button {
      padding: 0.625rem 1.25rem;
      font-size: 0.8125rem;
    }
  }
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  // Get form and elements
  const form = document.querySelector('[data-product-form]');
  if (!form) return;

  // Get product data
  const productJson = document.querySelector('[data-product-json]');
  if (!productJson) return;

  let product;
  try {
    product = JSON.parse(productJson.textContent);
  } catch (e) {
    console.error('Error parsing product JSON:', e);
    return;
  }

  // Variant selection
  const optionButtons = form.querySelectorAll('[data-option-button]');
  const variantIdInput = form.querySelector('[data-variant-id]');
  const priceElement = document.querySelector('[data-product-price]');
  const addToCartButton = form.querySelector('[data-add-to-cart]');
  const buttonText = form.querySelector('[data-button-text]');

  optionButtons.forEach(button => {
    button.addEventListener('click', function() {
      const position = this.getAttribute('data-option-position');
      const value = this.getAttribute('data-option-value');

      // Update active state
      form.querySelectorAll(`[data-option-position="${position}"]`).forEach(btn => {
        btn.classList.remove('active');
      });
      this.classList.add('active');

      // Find matching variant
      const selectedOptions = [];
      form.querySelectorAll('[data-option-button].active').forEach(btn => {
        const pos = parseInt(btn.getAttribute('data-option-position'));
        const val = btn.getAttribute('data-option-value');
        selectedOptions[pos - 1] = val;
      });

      const variant = product.variants.find(v => {
        return selectedOptions.every((option, index) => {
          return v.options[index] === option;
        });
      });

      if (variant) {
        variantIdInput.value = variant.id;
        if (priceElement) {
          priceElement.textContent = '$' + (variant.price / 100).toFixed(2);
        }
        if (addToCartButton && buttonText) {
          addToCartButton.disabled = !variant.available;
          buttonText.textContent = variant.available ? 'Add to Basket' : 'Sold Out';
        }
      }
    });
  });

  // Quantity selector
  const quantityInput = form.querySelector('[data-quantity-input]');
  const decreaseButton = form.querySelector('[data-quantity-decrease]');
  const increaseButton = form.querySelector('[data-quantity-increase]');

  if (quantityInput && decreaseButton && increaseButton) {
    decreaseButton.addEventListener('click', function() {
      const currentValue = parseInt(quantityInput.value) || 1;
      if (currentValue > 1) {
        quantityInput.value = currentValue - 1;
      }
    });

    increaseButton.addEventListener('click', function() {
      const currentValue = parseInt(quantityInput.value) || 1;
      quantityInput.value = currentValue + 1;
    });

    quantityInput.addEventListener('change', function() {
      const value = parseInt(this.value) || 1;
      if (value < 1) {
        this.value = 1;
      }
    });
  }

  // Mobile carousel
  const carousel = document.querySelector('[data-mobile-carousel]');
  const dots = document.querySelectorAll('[data-dot-index]');

  if (carousel && dots.length > 0) {
    dots.forEach(dot => {
      dot.addEventListener('click', function() {
        const index = parseInt(this.getAttribute('data-dot-index'));
        const slideWidth = carousel.offsetWidth;
        carousel.scrollTo({
          left: index * slideWidth,
          behavior: 'smooth'
        });
      });
    });

    let scrollTimeout;
    carousel.addEventListener('scroll', function() {
      clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(() => {
        const slideWidth = carousel.offsetWidth;
        const currentIndex = Math.round(carousel.scrollLeft / slideWidth);

        dots.forEach((dot, index) => {
          if (index === currentIndex) {
            dot.classList.add('active');
          } else {
            dot.classList.remove('active');
          }
        });
      }, 100);
    });
  }
});
{% endjavascript %}

{% schema %}
{
  "name": "Product Page",
  "settings": []
}
{% endschema %}